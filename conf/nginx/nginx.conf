user root;

#进程优化，资源的充分利用，减少资源争夺
worker_processes $WORK_PROCESSES;
worker_cpu_affinity $WORKER_CPU_AFFINITY;

pcre_jit on;
#限制使用的文件描述符的数量，防止出现502错误
worker_rlimit_nofile $WORKER_RLIMIT_NOFILE;

#这个设置是让worker平均分配请求
events {
  use epoll;
  worker_connections $WORKER_CONNECTIONS;
  multi_accept off;
}

#定义线程池，在io操作的时候配置上去
thread_pool io_pool threads=16;

http {

    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }

    #包含传输优化相关配置
    include /etc/nginx/config/transmission_optimization.conf;
    #http相关优化
    include /etc/nginx/config/http_limit_optimization.conf;
  
    include /etc/nginx/config/resolve.conf;

    #并发限制池
    limit_conn_zone $binary_remote_addr zone=limit_zone:10m;
    #请求限制池，在这种情况下，将为一个名为“one”的区域分配10MB，这个区域的平均查询速度为每秒最多200个请求。
    limit_req_zone $binary_remote_addr zone=limit_req_zone:10m rate=200r/s;

    #指定错误页面
    error_page    404           /404.html;

    #注释填充功能，当返回码大于400的时候填充到512字节，如果不填充则会显示浏览器的错误页面
    msie_padding on;

    #指定缓存目录levels设置目录层次，      
    #keys_zone设置缓存名字和共享内存大小，
    #inactive在指定时间内没人访问则被删除在这里是1天，
    #max_size最大缓存空间。
    proxy_cache_path /tmp/ngx_cache levels=1:2 keys_zone=nginx_proxy_zone:100m inactive=1d max_size=5g;
    #启用将head请求和转化为get请求缓存，默认开启，开启的时候需要设置缓存键值包含$request_method

    #配置log
    log_format  weblog  '[$time_local] "$request" status:$status rt:$request_time '
               'referer:"$http_referer" user_agent:"$http_user_agent" post_data:"$request_body" remote_addr:$remote_addr remote_user:$remote_user foward:"$http_x_forwarded_for"';

    log_format  no_post_log  '[$time_local] "$request" status:$status rt:$request_time '
               'referer:"$http_referer" user_agent:"$http_user_agent" post_data:"skip" remote_addr:$remote_addr remote_user:$remote_user foward:"$http_x_forwarded_for"';
               
    server {
      #获取环境变量
      server_name file.store.52db.club;
      #重定向时沿用当前servername
      server_name_in_redirect on;
      #重定向时沿用当前的port
      port_in_redirect on;

      #log
      error_log $LOGPATH/user_server_error.log debug;
      access_log  $LOGPATH/user_server_error.log weblog;

      listen 80;

      #静态文件缓存
      location ~ (.*)\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|woff|ttf)$ {
        root /apps;
        expires 7d;

        #这里是前端命中
        try_files $uri $uri/ =404;
        add_header Access-Control-Allow-Origin *;
        access_log off;
      }

      location ~ /(.*)\.(js|css)
      {
        root /apps;
        try_files $uri $uri/ =404;
        add_header Cache-Control no-cache;
        expires      1h;
        access_log off;
        #app静态资源缓存
        include /etc/nginx/config/app_static_source.conf;   
      }

      location = /
      {
        return 204;
        deny all;
      }

      #前端命中
      location /vue_file_store_pro {
        root /apps;
        index index.html;
        try_files $uri $uri/ /vue_file_store_pro/index.html;
        add_header Cache-Control no-store;
        add_header Pragma no-cache;
      }

    }

    include /etc/nginx/conf.d/*.conf;

  }
