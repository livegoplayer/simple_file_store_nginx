#设置用于读取从 gRPC 服务器收到的响应的缓冲区的大小（size）。一旦收到响应，响应便会同步传送给客户端。
grpc_buffer_size 4096;

#定义与 gRPC 服务器建立连接的超时时间。需要说明的是，超时通常不能超过 75 秒。
grpc_connect_timeout 15s;

#忽略这些响应头
grpc_ignore_headers X-Accel-Redirect X-Accel-Charset;

#确定状态码大于或等于 300 的 gRPC 服务器响应是应该传送给客户端还是拦截并重定向到 nginx 使用 error_page 指令进行处理。
grpc_intercept_errors on;

#设置重试次数为
grpc_next_upstream_tries 3;
#设置最长重试时间，超过时间则停止重试
grpc_next_upstream_timeout 10s;

#设置grpc优化,定义从 gRPC 服务器读取响应的超时时间。超时间隔只在两次连续的读操作之间，而不是整个响应的传输过程。
#如果 gRPC 服务器在此时间内没有发送任何内容，则连接关闭。
grpc_read_timeout 60s;
#设置向 gRPC 服务器发送请求的超时时间。超时间隔只在两次连续写入操作之间，而不是整个请求的传输过程。
#如果 gRPC 服务器在此时间内没有收到任何内容，则连接将关闭。
grpc_send_timeout 60s;
# 重点！！需要将Content-Type更改为 application/grpc
# grpc-web过来的是application/grpc-web+proto || application/grpc-web+text 
#(取决于生成js代码时grpc-web_out 的mode选项，本文用grpcweb 则为application/grpc-web+proto)
grpc_set_header Content-Type application/grpc; 
grpc_socket_keepalive on;

